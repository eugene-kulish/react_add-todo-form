{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","getTodoId","Math","max","todosWithUsersInfo","userId","usersFromServer","find","initialUserState","initialTodoState","App","useState","userName","setUserName","newTodo","setNewTodo","setTodos","hasTitleError","setHasTitleError","hasNameError","setHasNameError","action","method","onSubmit","event","preventDefault","addedTodo","currentTodos","prevTodo","type","value","placeholder","onChange","newValue","target","prevInput","required","newUserName","foundUser","onUserChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f6e91e8.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../services/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\n\nimport { Todo } from '../../services/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo\n        user={todo.user || null}\n      />\n    </article>\n  );\n};\n","import { Todo } from '../../services/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\n\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './services/User';\nimport { Todo } from './services/Todo';\n\nfunction getTodoId(todos: Todo[]) {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nconst todosWithUsersInfo = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUserById(todo.userId),\n  };\n});\n\nconst initialUserState = {\n  id: 0,\n  name: '',\n  username: '',\n  email: '',\n};\n\nconst initialTodoState = {\n  id: 0,\n  title: '',\n  completed: false,\n  userId: 0,\n  user: {},\n};\n\nexport const App = () => {\n  const [userName, setUserName] = useState('');\n  const [newTodo, setNewTodo] = useState({\n    ...initialTodoState,\n    user: initialUserState,\n  });\n  const [todos, setTodos] = useState(todosWithUsersInfo);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasNameError, setHasNameError] = useState(false);\n\n  const onUserChange = (newUserName: string) => {\n    const foundUser = usersFromServer.find(user => (\n      user.name === newUserName\n    ));\n\n    setHasNameError(false);\n    setUserName(newUserName);\n    setNewTodo(prevInput => ({\n      ...prevInput,\n      user: foundUser || initialUserState,\n    }));\n  };\n\n  const onTitleChange = (newValue: string) => {\n    setHasTitleError(false);\n    setNewTodo(prevInput => ({\n      ...prevInput,\n      title: newValue,\n    }));\n  };\n\n  const reset = () => {\n    setUserName('');\n    setNewTodo(prevTodo => ({\n      ...prevTodo,\n      title: '',\n      user: initialUserState,\n    }));\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!newTodo.title);\n    setHasNameError(!userName);\n\n    if (!newTodo.title || !userName) {\n      return;\n    }\n\n    const addedTodo = {\n      ...newTodo,\n      id: getTodoId(todos),\n    };\n\n    setTodos(currentTodos => [\n      ...currentTodos, addedTodo,\n    ]);\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={newTodo.title}\n            placeholder=\"Enter a title\"\n            onChange={(event) => onTitleChange(event.target.value)}\n            required={hasTitleError}\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userName}\n            onChange={(event) => onUserChange(event.target.value)}\n            required={hasNameError}\n          >\n            <option value=\"\">Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option\n                value={user.name}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasNameError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}